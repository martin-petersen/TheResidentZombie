name: Deploy in Amazon AWS

on:
  workflow_dispatch:

jobs:

  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Deploy in EC2
        env:
          PRIVATE_KEY: ${{ secrets.AWS_KEY  }}
          HOST: ${{ secrets.EC2_INSTANCE_HOST  }}
          USERNAME: ${{ secrets.EC2_INSTANCE_USERNAME  }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER  }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD  }}
          PROFILE: ${{ secrets.PROFILE  }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD  }}
          DB_USERNAME: ${{ secrets.DB_USERNAME  }}
          DB_URL: ${{ secrets.DB_URL  }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USERNAME}@${HOST} "
          rm -rf TheResidentZombie/
          git clone https://github.com/martin-petersen/TheResidentZombie.git &&
          cd TheResidentZombie/ &&
          POSTGRES_USER=${POSTGRES_USER} POSTGRES_PASSWORD=${POSTGRES_PASSWORD} PROFILE=${PROFILE} DB_USERNAME=${DB_USER} DB_PASSWORD=${DB_PASSWORD} DB_URL=${DB_URL} docker-compose pull &&
          POSTGRES_USER=${POSTGRES_USER} POSTGRES_PASSWORD=${POSTGRES_PASSWORD} PROFILE=${PROFILE} DB_USERNAME=${DB_USER} DB_PASSWORD=${DB_PASSWORD} DB_URL=${DB_URL} docker-compose down &&
          POSTGRES_USER=${POSTGRES_USER} POSTGRES_PASSWORD=${POSTGRES_PASSWORD} PROFILE=${PROFILE} DB_USERNAME=${DB_USER} DB_PASSWORD=${DB_PASSWORD} DB_URL=${DB_URL} docker-compose up -d
          "


